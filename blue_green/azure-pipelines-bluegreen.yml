trigger:
  branches:
    include:
      - main
      - develop

pool:
  vmImage: 'ubuntu-latest'

variables:
  azureSubscription: 'YOUR_AZURE_SUBSCRIPTION_SERVICE_CONNECTION'
  appName: 'YOUR_WEBAPP_NAME'
  resourceGroupName: 'YOUR_RESOURCE_GROUP_NAME'
  blueSlotName: 'blue'
  greenSlotName: 'green'

jobs:
- job: Build
  displayName: 'Build Stage'
  steps:
  - task: UseDotNet@2
    inputs:
      packageType: 'sdk'
      version: '5.x'
      installationPath: $(Agent.ToolsDirectory)/dotnet

  - script: dotnet build --configuration Release
    displayName: 'Build Project'

  - script: dotnet publish --configuration Release --output $(Build.ArtifactStagingDirectory)
    displayName: 'Publish Project'

  - task: PublishBuildArtifacts@1
    inputs:
      pathToPublish: $(Build.ArtifactStagingDirectory)
      artifactName: 'drop'

- job: Deploy
  dependsOn: Build
  displayName: 'Deploy Stage'
  variables:
    artifactPath: $(Pipeline.Workspace)/drop
  steps:
  - download: current
    artifact: drop

  - task: AzureWebApp@1
    displayName: 'Deploy to Green Slot'
    inputs:
      azureSubscription: $(azureSubscription)
      appName: $(appName)
      package: $(Pipeline.Workspace)/drop
      resourceGroupName: $(resourceGroupName)
      slotName: $(greenSlotName)

  - task: AzureWebApp@1
    displayName: 'Swap Green Slot with Production'
    inputs:
      azureSubscription: $(azureSubscription)
      appName: $(appName)
      resourceGroupName: $(resourceGroupName)
      sourceSlot: $(greenSlotName)
      targetSlot: 'production'

  - task: AzureWebApp@1
    displayName: 'Deploy to Blue Slot (Backup)'
    inputs:
      azureSubscription: $(azureSubscription)
      appName: $(appName)
      package: $(Pipeline.Workspace)/drop
      resourceGroupName: $(resourceGroupName)
      slotName: $(blueSlotName)
      enableCustomDeployment: true
      takeAppOffline: true

  - script: |
      echo "Deployment to Green Slot completed and swapped with Production Slot."
    displayName: 'Deployment Summary'